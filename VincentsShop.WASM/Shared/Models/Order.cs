using System;
using System.Collections.Generic;
using System.Globalization;
using System.Linq;
using System.Text.Json.Serialization;


namespace VincentsShop.WASM.Shared.Models
{
    /// <summary>
    /// Generated by https://json2csharp.com/ from Dolibarr API Get Order JSON response
    /// </summary>
    public class Order
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.Always)]
        public ThirdParty client { get; set; }

        [JsonPropertyName("socid")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string socid { get; set; }

        [JsonPropertyName("ref_client")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object ref_client { get; set; }

        [JsonPropertyName("contactid")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object contactid { get; set; }

        [JsonPropertyName("statut")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string statut { get; set; }

        [JsonPropertyName("billed")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string billed { get; set; }

        [JsonPropertyName("brouillon")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object brouillon { get; set; }

        [JsonPropertyName("cond_reglement_code")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string cond_reglement_code { get; set; }

        [JsonPropertyName("fk_account")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object fk_account { get; set; }

        [JsonPropertyName("mode_reglement")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string mode_reglement { get; set; }

        [JsonPropertyName("mode_reglement_id")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string mode_reglement_id { get; set; }

        [JsonPropertyName("mode_reglement_code")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string mode_reglement_code { get; set; }

        [JsonPropertyName("availability_id")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object availability_id { get; set; }

        [JsonPropertyName("availability_code")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object availability_code { get; set; }

        [JsonPropertyName("availability")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object availability { get; set; }

        [JsonPropertyName("demand_reason_id")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object demand_reason_id { get; set; }

        [JsonPropertyName("demand_reason_code")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object demand_reason_code { get; set; }

        [JsonPropertyName("date")]
        [JsonIgnore(Condition = JsonIgnoreCondition.Never)]
        public int date { get; set; }

        [JsonPropertyName("date_commande")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public int date_commande { get; set; }

        [JsonPropertyName("date_livraison")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public string date_livraison { get; set; }

        [JsonPropertyName("fk_remise_except")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object fk_remise_except { get; set; }

        [JsonPropertyName("remise_percent")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string remise_percent { get; set; }

        [JsonPropertyName("remise_absolue")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object remise_absolue { get; set; }

        [JsonPropertyName("info_bits")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object info_bits { get; set; }

        [JsonPropertyName("rang")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object rang { get; set; }

        [JsonPropertyName("special_code")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object special_code { get; set; }

        [JsonPropertyName("source")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object source { get; set; }

        [JsonPropertyName("extraparams")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public List<object> extraparams { get; set; }

        [JsonPropertyName("linked_objects")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public List<object> linked_objects { get; set; }

        [JsonPropertyName("user_author_id")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string user_author_id { get; set; }

        [JsonPropertyName("user_valid")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string user_valid { get; set; }

        [JsonPropertyName("lines")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public List<OrderLine> lines { get; set; }


        [JsonPropertyName("fk_multicurrency")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string fk_multicurrency { get; set; }

        [JsonPropertyName("multicurrency_code")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string multicurrency_code { get; set; }

        [JsonPropertyName("multicurrency_tx")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string multicurrency_tx { get; set; }

        [JsonPropertyName("multicurrency_total_ht")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string multicurrency_total_ht { get; set; }

        [JsonPropertyName("multicurrency_total_tva")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string multicurrency_total_tva { get; set; }

        [JsonPropertyName("multicurrency_total_ttc")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string multicurrency_total_ttc { get; set; }

        [JsonPropertyName("module_source")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object module_source { get; set; }

        [JsonPropertyName("pos_source")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object pos_source { get; set; }

        [JsonPropertyName("id")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string id { get; set; }

        [JsonPropertyName("import_key")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object import_key { get; set; }

        [JsonPropertyName("array_options")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public List<object> array_options { get; set; }

        [JsonPropertyName("array_languages")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object array_languages { get; set; }

        [JsonPropertyName("linkedObjectsIds")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object linkedObjectsIds { get; set; }

        [JsonPropertyName("canvas")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object canvas { get; set; }

        [JsonPropertyName("fk_project")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object fk_project { get; set; }

        [JsonPropertyName("contact")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object contact { get; set; }

        [JsonPropertyName("contact_id")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object contact_id { get; set; }

        [JsonPropertyName("thirdparty")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object thirdparty { get; set; }

        [JsonPropertyName("user")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object user { get; set; }

        [JsonPropertyName("origin")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object origin { get; set; }

        [JsonPropertyName("origin_id")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object origin_id { get; set; }

        [JsonPropertyName("ref")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string @ref { get; set; }

        [JsonPropertyName("ref_ext")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object ref_ext { get; set; }

        [JsonPropertyName("country")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object country { get; set; }

        [JsonPropertyName("country_id")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object country_id { get; set; }

        [JsonPropertyName("country_code")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object country_code { get; set; }

        [JsonPropertyName("state")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object state { get; set; }

        [JsonPropertyName("state_id")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object state_id { get; set; }

        [JsonPropertyName("state_code")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object state_code { get; set; }

        [JsonPropertyName("cond_reglement_id")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string cond_reglement_id { get; set; }

        [JsonPropertyName("cond_reglement")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string cond_reglement { get; set; }

        [JsonPropertyName("shipping_method_id")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object shipping_method_id { get; set; }

        [JsonPropertyName("modelpdf")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string modelpdf { get; set; }

        [JsonPropertyName("last_main_doc")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string last_main_doc { get; set; }

        [JsonPropertyName("note_public")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string note_public { get; set; }

        [JsonPropertyName("note_private")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string note_private { get; set; }

        [JsonPropertyName("total_ht")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string total_ht { get; set; }

        [JsonPropertyName("total_tva")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string total_tva { get; set; }

        [JsonPropertyName("total_localtax1")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string total_localtax1 { get; set; }

        [JsonPropertyName("total_localtax2")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string total_localtax2 { get; set; }

        [JsonPropertyName("total_ttc")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string total_ttc { get; set; }

        [JsonPropertyName("fk_incoterms")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string fk_incoterms { get; set; }

        [JsonPropertyName("label_incoterms")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object label_incoterms { get; set; }

        [JsonPropertyName("location_incoterms")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string location_incoterms { get; set; }

        [JsonPropertyName("name")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object name { get; set; }

        [JsonPropertyName("lastname")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object lastname { get; set; }

        [JsonPropertyName("firstname")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object firstname { get; set; }

        [JsonPropertyName("civility_id")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object civility_id { get; set; }

        [JsonPropertyName("date_creation")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public int? date_creation { get; set; }

        [JsonPropertyName("date_validation")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public int? date_validation { get; set; }

        [JsonPropertyName("date_modification")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string date_modification { get; set; }

        [JsonPropertyName("remise")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string remise { get; set; }

        [JsonPropertyName("products")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public List<object> products { get; set; }

        [JsonPropertyName("entity")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string entity { get; set; }

        [JsonPropertyName("ref_customer")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object ref_customer { get; set; }

        [JsonPropertyName("cond_reglement_doc")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string cond_reglement_doc { get; set; }

        [JsonPropertyName("warehouse_id")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object warehouse_id { get; set; }

        [JsonPropertyName("contacts_ids")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public List<object> contacts_ids { get; set; }

        /// <summary>
        /// Permet de fournir la date actuellement en secondes depuis EPOCH (1 janvier 1970) (Format Unix)
        /// </summary>
        public void SetEpochOrderDate()
        {
            TimeSpan t = DateTime.UtcNow - new DateTime(1970, 1, 1);
            date = date_commande = (int)t.TotalSeconds;
        }
        public string GetEpochDateToString()
        {
            return new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc).AddSeconds(date).ToLongDateString();
        }

        public string GetFormattedPrice()
        {
            try
            {
                return decimal.Parse(total_ttc, CultureInfo.InvariantCulture).ToString("0.00");
            }
            catch (Exception)
            {

                throw;
            }
           
        }

        /// <summary>
        /// La commande est brouillon si on ne met pas le statut à 3 (traité)
        /// </summary>
        public void FinalizeOrder()
        {
            //statut = "3";
            //billed = "1";
            total_ht = lines.Sum(x => decimal.Parse(x.total_ht)).ToString();
        }
    }
}
