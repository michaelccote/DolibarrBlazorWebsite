using System.Collections.Generic;
using System.Text.Json.Serialization;

namespace VincentsShop.WASM.Shared.Models
{
    /// <summary>
    /// Generated by https://json2csharp.com/ from Dolibarr API Get Order JSON response
    /// </summary>
    public class OrderLine
    {
        [JsonIgnore(Condition = JsonIgnoreCondition.Always)]
        public Order order { get; set; }

        [JsonIgnore(Condition = JsonIgnoreCondition.Always)]
        public Product product { get; set; }

        [JsonPropertyName("fk_commande")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string fk_commande { get; set; }

        [JsonPropertyName("commande_id")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string commande_id { get; set; }

        [JsonPropertyName("fk_parent_line")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object fk_parent_line { get; set; }

        [JsonPropertyName("fk_facture")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object fk_facture { get; set; }

        [JsonPropertyName("label")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object label { get; set; }

        [JsonPropertyName("fk_remise_except")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object fk_remise_except { get; set; }

        [JsonPropertyName("rang")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string rang { get; set; }

        [JsonPropertyName("fk_fournprice")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object fk_fournprice { get; set; }

        [JsonPropertyName("pa_ht")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string pa_ht { get; set; }

        /// <summary>
        /// Transformé en int? pour retour Dolibarr ("")
        /// </summary>
        [JsonPropertyName("marge_tx")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public int? marge_tx { get; set; } 

        /// <summary>
        /// Transformé en int? pour retour Dolibarr ("")
        /// </summary>
        [JsonPropertyName("marque_tx")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public int? marque_tx { get; set; } 

        [JsonPropertyName("remise")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object remise { get; set; }

        [JsonPropertyName("date_start")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string date_start { get; set; }

        [JsonPropertyName("date_end")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string date_end { get; set; }

        [JsonPropertyName("ref")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string @ref { get; set; }

        [JsonPropertyName("product_ref")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string product_ref { get; set; }

        [JsonPropertyName("libelle")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string libelle { get; set; }

        [JsonPropertyName("product_label")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string product_label { get; set; }

        [JsonPropertyName("product_desc")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string product_desc { get; set; }

        [JsonPropertyName("qty")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string qty { get; set; }

        [JsonPropertyName("price")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string price { get; set; }

        [JsonPropertyName("subprice")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string subprice { get; set; }

        [JsonPropertyName("product_type")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string product_type { get; set; }

        [JsonPropertyName("desc")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string desc { get; set; }

        [JsonPropertyName("fk_product")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string fk_product { get; set; }

        [JsonPropertyName("remise_percent")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string remise_percent { get; set; }

        [JsonPropertyName("tva_tx")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string tva_tx { get; set; }

        [JsonPropertyName("localtax1_tx")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string localtax1_tx { get; set; }

        [JsonPropertyName("localtax2_tx")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string localtax2_tx { get; set; }

        [JsonPropertyName("localtax1_type")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string localtax1_type { get; set; }

        [JsonPropertyName("localtax2_type")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string localtax2_type { get; set; }

        [JsonPropertyName("info_bits")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string info_bits { get; set; }

        [JsonPropertyName("special_code")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string special_code { get; set; }

        [JsonPropertyName("id")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string id { get; set; }

        [JsonPropertyName("rowid")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string rowid { get; set; }

        [JsonPropertyName("fk_unit")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object fk_unit { get; set; }

        [JsonPropertyName("import_key")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object import_key { get; set; }

        [JsonPropertyName("array_options")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public List<object> array_options { get; set; }

        [JsonPropertyName("array_languages")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object array_languages { get; set; }

        [JsonPropertyName("linkedObjectsIds")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object linkedObjectsIds { get; set; }

        [JsonPropertyName("canvas")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object canvas { get; set; }

        [JsonPropertyName("origin")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object origin { get; set; }

        [JsonPropertyName("origin_id")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object origin_id { get; set; }

        [JsonPropertyName("ref_ext")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object ref_ext { get; set; }

        [JsonPropertyName("statut")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object statut { get; set; }

        [JsonPropertyName("state")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object state { get; set; }

        [JsonPropertyName("state_id")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string state_id { get; set; }

        [JsonPropertyName("state_code")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object state_code { get; set; }

        [JsonPropertyName("last_main_doc")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object last_main_doc { get; set; }

        [JsonPropertyName("fk_account")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object fk_account { get; set; }

        [JsonPropertyName("total_ht")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string total_ht { get; set; }

        [JsonPropertyName("total_tva")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string total_tva { get; set; }

        [JsonPropertyName("total_localtax1")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string total_localtax1 { get; set; }

        [JsonPropertyName("total_localtax2")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string total_localtax2 { get; set; }

        [JsonPropertyName("total_ttc")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string total_ttc { get; set; }

        [JsonPropertyName("lines")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object lines { get; set; }

        [JsonPropertyName("date_creation")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object date_creation { get; set; }

        [JsonPropertyName("date_validation")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object date_validation { get; set; }

        [JsonPropertyName("date_modification")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object date_modification { get; set; }

        [JsonPropertyName("description")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string description { get; set; }

        [JsonPropertyName("vat_src_code")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string vat_src_code { get; set; }

        [JsonPropertyName("product_tobatch")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string product_tobatch { get; set; }

        [JsonPropertyName("fk_product_type")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string fk_product_type { get; set; }

        [JsonPropertyName("weight")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object weight { get; set; }

        [JsonPropertyName("weight_units")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string weight_units { get; set; }

        [JsonPropertyName("volume")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public object volume { get; set; }

        [JsonPropertyName("volume_units")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string volume_units { get; set; }

        [JsonPropertyName("multicurrency_subprice")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string multicurrency_subprice { get; set; }

        [JsonPropertyName("multicurrency_total_ht")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string multicurrency_total_ht { get; set; }

        [JsonPropertyName("multicurrency_total_tva")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string multicurrency_total_tva { get; set; }

        [JsonPropertyName("multicurrency_total_ttc")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)]
        public string multicurrency_total_ttc { get; set; }

        public void FinalizeOrderLine()
        {
            fk_product = product.id.ToString();
            description = desc = product.description;
            price = subprice = product.price.ToString();
            total_ht = (decimal.Parse(price) * int.Parse(qty)).ToString("0.00");
        }
    }
}
